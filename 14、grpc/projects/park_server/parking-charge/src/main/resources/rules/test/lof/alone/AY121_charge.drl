package rules.test.lof.alone

import com.czdx.parkingcharge.domain.pr.ParkingRecord
import com.czdx.parkingcharge.utils.ParkingFeeUtil
import java.math.BigDecimal


// 超出最高限价时间
rule "AY121-divide-maxcharge"
    activation-group "charge-rule"
    salience 200
    when
        $pRecord:ParkingRecord($duration: parkingDuration >= 1440)
    then
        System.out.println("触发规则：超出最高限价时间分割");
        BigDecimal fee = ParkingFeeUtil.divideCP2ChargeFee($pRecord, 1440, BigDecimal.valueOf(25), "2", "1");
        $pRecord.setParkingFee(fee);
end

// 超过时长后，隐藏的分割，不会考虑免费时长次数、首时段计费方式
rule "AY121-hide-1"
    activation-group "charge-rule"
    salience 110
    when
        $pRecord:ParkingRecord($duration: parkingDuration > 1440)
    then
        // 该分割，不允许使用免费时长、首时段
        BigDecimal fee = ParkingFeeUtil.divideHideDuration2ChargeFee($pRecord, 1440, "Y", BigDecimal.valueOf(25));
        $pRecord.setParkingFee(fee);
end

// 免费时间段 18 分钟
rule "AY121-1"
    activation-group "charge-rule"
    salience 100
    when
        $pRecord:ParkingRecord($duration: parkingDuration <= 18, useFreeTime)
    then
        System.out.println("触发规则：AY121-1");
        $pRecord.setParkingFee(BigDecimal.ZERO);
end

// 一个期间，时长1440分钟，5元每60分钟
rule "AY121-2"
    activation-group "charge-rule"
    salience 90
    when
        $pRecord:ParkingRecord($duration: parkingDuration > 0)
    then
        System.out.println("触发规则：AY121-2");
        long remainingMins = $duration;
        BigDecimal fee = ParkingFeeUtil.chargeParkingFee(remainingMins, 60, BigDecimal.valueOf(5),
        "1", BigDecimal.valueOf(25));
        $pRecord.setParkingFee(fee);
end
