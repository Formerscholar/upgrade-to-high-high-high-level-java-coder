package rules.test.lof.alone

import com.czdx.parkingcharge.domain.pr.ParkingRecord
import com.czdx.parkingcharge.utils.ParkingFeeUtil
import java.math.BigDecimal


// 24小时强制分割
rule "AN211-divide-24h"
    activation-group "charge-rule"
    salience 120
    when
        $pRecord:ParkingRecord($duration: parkingDuration > 1440)
    then
        // 按24小时分割，计算费用
        // 分割后，需要考虑 免费时长次数，首时段计费方式
        BigDecimal fee = ParkingFeeUtil.divide24Hours2ChargeFee($pRecord, "1", "1", BigDecimal.valueOf(0));
        $pRecord.setParkingFee(fee);
end

// 超过时长后，隐藏的分割，不会考虑免费时长次数、首时段计费方式
rule "AN211-hide-1"
    activation-group "charge-rule"
    salience 110
    when
        $pRecord:ParkingRecord($duration: parkingDuration > 1440)
    then
        // 该分割，不允许使用免费时长、首时段
        BigDecimal fee = ParkingFeeUtil.divideHideDuration2ChargeFee($pRecord, 1440, "Y", null);
        $pRecord.setParkingFee(fee);
end

// 免费时间段 18 分钟
rule "AN211-1"
    activation-group "charge-rule"
    salience 100
    when
        $pRecord:ParkingRecord($duration: parkingDuration <= 18, useFreeTime)
    then
        System.out.println("触发规则：AN211-1");
        $pRecord.setParkingFee(BigDecimal.ZERO);
end

// 一个期间，时长1440分钟，5元每60分钟
rule "AN211-2"
    activation-group "charge-rule"
    salience 90
    when
        $pRecord:ParkingRecord($duration: parkingDuration > 0)
    then
        System.out.println("触发规则：AN211-2");
        long remainingMins = $duration;
        BigDecimal fee = ParkingFeeUtil.chargeParkingFee(remainingMins, 60, BigDecimal.valueOf(5), "1", BigDecimal.valueOf(50));
        $pRecord.setParkingFee(fee);
end
