syntax = "proto3";

import public "google/protobuf/timestamp.proto";

// 如果是两个文件中消息类型一样，则会报错，就好比java中类名一摸一样，会报错道理是一样的，因此为了区分可以给每个.proto文件增加包
package com.czdx.grpc.lib.merchant;

// 是否如果是true，那么每一个message文件都会有一个单独的class文件 否则，message全部定义在outerclass文件里
option java_multiple_files = false;
// 生成java代码的包名
option java_package = "com.czdx.grpc.lib.merchant";
// 是用一个class文件来定义所有的message对应的java类
option java_outer_classname = "CouponOrderPayment";

service CouponOrderPaymentService {
  rpc updateCouponOrderPayment(CouponOrderPaymentRequest) returns (CouponOrderPaymentResponse) {};
}




message CouponOrderPaymentRequest {
  //场地编号
  string parkNo = 1;
  //订单编号
  string orderNo = 2;
  //支付状态 -1 为异常，其他为正常
  int32 payStatus = 3;

  //处理结果信息
  string resultMessage = 4;


}

message CouponOrderPaymentResponse {
  // 返回状态码
  string status = 1;

  string message = 2;
}




