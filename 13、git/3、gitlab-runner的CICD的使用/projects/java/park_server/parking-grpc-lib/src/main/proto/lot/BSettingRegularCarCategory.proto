syntax = "proto3";

// 如果是两个文件中消息类型一样，则会报错，就好比java中类名一摸一样，会报错道理是一样的，因此为了区分可以给每个.proto文件增加包
package com.czdx.grpc.lib.lot;

// 是否如果是true，那么每一个message文件都会有一个单独的class文件 否则，message全部定义在outerclass文件里
option java_multiple_files = true;
// 生成java代码的包名
option java_package = "com.czdx.grpc.lib.lot";
// 是用一个class文件来定义所有的message对应的java类
option java_outer_classname = "BSettingRegularCarCategoryProto";

// 这里面定义了一个gRPC服务，里面含有一个接口，并且还有这个接口的入参和返回结果的定义
// 固定车类型API列表
service BSettingRegularCarCategoryService {
  // RPC方法定义
  // 根据场库编号查询当前线上可续费的固定车类型
  rpc listOnlineCategory(ListOnlineCategoryRequestProto) returns (ListOnlineCategoryResponseProto) {}
  // 根据价格参数id获取价格参数详情
  rpc getCategoryPriceById(GetCategoryPriceByIdRequestProto) returns (GetCategoryPriceByIdResponseProto) {}
  // 获取所有固定车类型
  rpc listAllCategory(ListAllCategoryRequestProto) returns (ListAllCategoryResponseProto) {}
  // 根据id获取单个固定车类型
  rpc getCategoryById(GetCategoryByIdRequestProto) returns (GetCategoryByIdResponseProto) {}
}

//在消息定义中，每个字段都有唯一的一个标识符。
//这些标识符是用来在消息的二进制格式中识别各个字段的，一旦开始使用就不能够再改变。

// 根据场库编号查询当前线上可续费的固定车类型 接口请求参数定义
message ListOnlineCategoryRequestProto{
  string parkNo = 1;
}

// 根据场库编号查询当前线上可续费的固定车类型 接口响应参数定义
message ListOnlineCategoryResponseProto{
  repeated BSettingRegularCarCategoryProtoInfo settingRegularCarCategoryProtoList = 1;
}

// 根据id获取固定车类型 接口请求参数定义
message GetCategoryByIdRequestProto{
  int32 id = 1;
}

// 根据id获取固定车类型 接口响应参数定义
message GetCategoryByIdResponseProto{
  BSettingRegularCarCategoryProtoInfo settingRegularCarCategoryProtoList = 1;
}

// 固定车类型 定义
message BSettingRegularCarCategoryProtoInfo{
  int32 id = 1;
  // 场库编号
  string parkNo = 2;
  // 固定车类型名称
  string name = 3;
  // 购买时限  ''0''-不限制 ''1''-限制
  string timeLimit = 4;
  // 购买生效时间
  string startTime = 6;
  // 购买失效时间
  string endTime = 7;
  // 价格参数列表
  repeated BSettingRegularCarCategoryPriceProtoInfo priceList = 8;
}

// 根据场库编号查询当前线上可续费的固定车类型 接口请求参数定义
message GetCategoryPriceByIdRequestProto{
  int32 id = 1;
}

// 根据场库编号查询当前线上可续费的固定车类型 接口响应参数定义
message GetCategoryPriceByIdResponseProto{
  int32 id = 1;
  string parkNo = 2;
  int32 regularCarCategoryId = 3;
  int32 month = 4;
  double price = 5;
}

// 固定车类型价格参数 定义
message BSettingRegularCarCategoryPriceProtoInfo{
  int32 id = 1;
  // 场库编号
  string parkNo = 2;
  // 固定车类型id
  int32 regular_car_category_id = 3;
  // 月数
  int32 month = 4;
  // 价格
  double price = 5;
}

// 获取固定车类型 接口请求参数定义
message ListAllCategoryRequestProto{
}

// 获取固定车类型 接口响应参数定义
message ListAllCategoryResponseProto{
  repeated BSettingRegularCarCategoryProtoInfo settingRegularCarCategoryProtoList = 1;
}

